/*
 * Name:	CannonballRun
 * Date:	2020-08-11
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * A mission in which one side chases the other with a helicopter.
 * Sides: ACTING is running and OPPOSING is hunting.
 *
 * TODO
 * Randomize start and end for the run.
 * Add a few ambient civilians and AAF vehicles with consequences if they are killed.
 */

using Tvtcf.Common;
using Tvtcf.Server;
using Campaigns;

namespace Campaigns.ShoeLace
{
	public class CannonballRun : ShoeLaceMission
	{
		private fields ["_mTruck" as Object];
	
		// Creates a CannonballRun object.
		public constructor()
		{
			call _base.Constructor;
		};
		
		protected override method InitMission("_mission" as MissionSettings)
		{
			_mission.Name = "Cannonball Run";
			_mission.StartTimeOfDay = floor random 24;
			_mission.StartMarkersActing = ["m10a_StartArea1"];
			_mission.StartMarkersOpposing = ["m10o_StartArea"];
			_mission.SideMarkersActing = ["m10_TruckStartPosition", "m10_SouthernLighthouse"];
			_mission.SideMarkersOpposing = ["m10_TruckStartPosition", "m10_SouthernLighthouse", "m10o_PrimaryHelicopter", "m10o_SecondaryHelicopter"];
		};
		
		protected override method Setup()
		{
			_mTruck = ["DEVICE TRUCK", MissionSide.Acting, "m10a_TruckStartMarker"] call _self.CreateSideVehicleOnMarker;
			["MRAP HMG", MissionSide.Acting, "m10a_EscortStartMarker"] call _self.CreateSideVehicleOnMarker;
			
			if ("HELICOPTER" in _self.LostTokensOpposing) then
			{
				["HELICOPTER WRECK", MissionSide.Opposing, "m_AirbaseHelipad1"] call _self.CreateSideVehicleOnMarker;
			}
			else {
				["HEAVY ATTACK HELICOPTER", MissionSide.Opposing, "m_AirbaseHelipad1"] call _self.CreateSideVehicleOnMarker;
			};
		
			["TRANSPORT HELICOPTER", MissionSide.Opposing, "m_AirbaseHelipad2"] call _self.CreateSideVehicleOnMarker;
			
			// An extra ordnance ammo box
			
			["AMMOBOX LAUNCHERS", MissionSide.Opposing, BaseMarker.AmmoCrate, true] call _self.CreateSideVehicleOnBaseMarker;
			
			call _base.Setup;
		};
		
		protected override method String AddBriefingInfoForActing()
		{
			return "The diplomacy with AAF has been making progress, and a peace treaty is close. Now they have asked us for help in planning an attack on our common enemy. They need us to aid them with equipment. This might be a good chance to get their help when we need it later.";
		};
		
		protected override method String AddBriefingInfoForOpposing()
		{
			return "Intelligence has found that the enemy will deliver boby trapped equipment to AAF. This is a very good chance to make better relations to AAF. Since we have air superiority for the moment we will send the Hawk and try to take them out. But we will need to hurry, the enemy is already moving. An extra box with launchers has also arrived.";
		};
		
		protected override method MissionObjective CreatePrimaryObjectiveForActing()
		{
			return ["Deliver truck to AAF.", "Drive the truck to AAF at the Southern Lighthouse. Do it as fast as you can, the enemy is believed to know about the operation already. An armed vehicle is there for escort."] new MissionObjective;
		};
		
		protected override method MissionObjective CreatePrimaryObjectiveForOpposing()
		{
			return ["Destroy the enemy truck.", "Take the helicopter, perform a search for the enemy vehicle and take it out. Just make sure that you under no circumstances kills any civilian or AAF personel."] new MissionObjective;
		};
		
		protected override method ObjectiveState CheckPrimaryObjectiveStateActing()
		{
			if (!canMove _mTruck) then {
				return ObjectiveState.Failed;
			};
			
			if (_mTruck distance getMarkerPos "m10_SouthernLighthouse" < 50) then {
				_self.GainedTokensActing pushBack "AAF ALLIANCE";
				[MissionSide.Acting, "Gained: AAF Alliance"] call _self.ShowNotification;
				return ObjectiveState.Succeeded;
			};
			
			return ObjectiveState.None;
		};
		
		protected override method ObjectiveState CheckPrimaryObjectiveStateOpposing()
		{
			if (_mTruck distance getMarkerPos "m10_SouthernLighthouse" < 50) then {
				return ObjectiveState.Failed;
			};
			
			var _truckCanMove = canMove _mTruck;
			var _allEnemyUnitsAreDead = (call _self.CountUnitsAliveActing) == 0;
			
			if (!_truckCanMove || _allEnemyUnitsAreDead) then {
				_self.GainedTokensOpposing pushBack "AAF ALLIANCE";
				[MissionSide.Opposing, "Gained: AAF Alliance"] call _self.ShowNotification;
				return ObjectiveState.Succeeded;
			};
			
			return ObjectiveState.None;
		};
	};
};
