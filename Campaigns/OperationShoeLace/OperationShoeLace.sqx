/*
 * Name:	OperationShoeLace
 * Date:	2020-07-27
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * Serious campaign with a story.
 */

using Mission.Common;
using Mission.Server;
using Campaigns;

namespace Campaigns.ShoeLace
{
	public class OperationShoeLace : Campaign
	{
		private fields ["_mCaptureTheAirbase" as Mission, "_mHawkDown" as Mission, "_mNightTensions" as Mission];
		
		// Creates a OperationShoeLace object.
		public constructor()
		{
			call _base.Constructor;
		};
		
		protected override method SelectMissions("_missions" as Array /* of Mission */)
		{
			_missions pushBack new Establishments;
			
			_mCaptureTheAirbase = new CaptureTheAirbase;
			[selectRandom [west, east]]_mCaptureTheAirbase.SetActingSide;
			_missions pushBack _mCaptureTheAirbase;
			
			_mHawkDown = new HawkDown;
			_missions pushBack _mHawkDown;
			
			_mNightTensions = new NightTensions;
			_missions pushBack _mNightTensions;
			
			_missions pushBack new AirStationAssault;
			_missions pushBack new CatAndMouse;
			_missions pushBack new CannonballRun;
		};
		
		public override method Mission GetNextMission("_lastMissionEndNarrative" as String)
		{
			private ["_mission" as Mission];
		
			if (_self.CurrentMissionIndex == 1) then {
				if (_lastMissionEndNarrative == "WEST wins the airbase.") then {
					[west] call _mHawkDown.SetActingSide;
					[east] call _mNightTensions.SetActingSide;
				};
			};
		
			_mission = [_lastMissionEndNarrative] call _base.GetNextMission;
			
			if (!isNull _mission) then {
				[east] call _mission.SetActingSide;
			};
			
			return _mission;
		};
	};
};
