/*
 * Name:	PublicVariableHandler
 * Date:	2017-11-30
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * Encapsulates all global variable handling and keeps its global properties persistent and at sync.
 * over the network.
 *
 * Remarks:
 * This is the *only* only file where the global public network variables are actually written.
 */

using Mission.Common;

namespace Mission.Communication
{
	public class PublicVariableHandler
	{
		// [Here is an example for how to handle one public variable. Each public variable should have three methods:
		// one the broadcasts the variable, one to check if the value exists (if it is broadcast at lease once),
		// and one that gets it.]
		
		#region MissionInfo
		
		// Sets and broadcasts mission info across the network.
		// _missionInfo (MissionInfo): The mission info object to be broadcasted.
		public static method BroadcastMissionInfo("_missionInfo" as MissionInfo)
		{
			PUBVAR_MissionInfo = _missionInfo;
			publicVariable "PUBVAR_MissionInfo";
		};
		
		// Gets whether the variable for mission has started has been public variabled at least once, so it actually has a value.
		public static method Boolean HasValueMissionInfo {
			!isNil "PUBVAR_MissionInfo"
		};
		
		// Gets the mission info object from the public network synchronized variable.
		// Before using this method, always call the corresponding HasValue method, since it might be nil if not yet broadcast.
		public static method MissionInfo GetMissionInfo { 
			PUBVAR_MissionInfo
		};
		
		// Sets and broadcasts mission markers info across the network.
		// _campaignPhase (CampaignPhase): The mission markers info object to be broadcasted.
		public static method BroadcastMissionMarkersInfo("_missionMarkersInfo" as MissionMarkersInfo)
		{
			PUBVAR_MissionMarkersInfo = _missionMarkersInfo;
			publicVariable "PUBVAR_MissionMarkersInfo";
		};
		
		// Gets whether the variable for mission markers info has started has been public variabled at least once, so it actually has a value.
		public static method Boolean HasValueMissionMarkersInfo() {
			return !isNil "PUBVAR_MissionMarkersInfo";
		};
		
		// Gets the mission markers info object from the public network synchronized variable.
		// Before using this method, always call the corresponding HasValue method, since it might be nil if not yet broadcast.
		public static method MissionMarkersInfo GetMissionMarkersInfo()
		{
			if (call _self.HasValueMissionMarkersInfo) then {
				return PUBVAR_MissionMarkersInfo;
			};

			return classNull;
		};
		
		
		// Sets and broadcasts mission briefing across the network.
		// _campaignPhase (CampaignPhase): The mission markers info object to be broadcasted.
		public static method BroadcastMissionBriefing("_missionBriefing" as MissionBriefing)
		{
			PUBVAR_MissionBriefing = _missionBriefing;
			publicVariable "PUBVAR_MissionBriefing";
		};
		
		// Gets whether the variable for mission briefing has started has been public variabled at least once, so it actually has a value.
		public static method Boolean HasValueMissionBriefing() {
			return !isNil "PUBVAR_MissionBriefing";
		};
		
		// Gets the mission briefing object from the public network synchronized variable.
		// Before using this method, always call the corresponding HasValue method, since it might be nil if not yet broadcast.
		public static method MissionBriefing GetMissionBriefing()
		{
			if (call _self.HasValueMissionBriefing) then {
				return PUBVAR_MissionBriefing;
			};

			return classNull;
		};
		
		
		// Sets and broadcasts whether west has inserted across the network.
		// _hasInserted (Boolean): Whether west has inserted into the mission or not.
		public static method BroadcastWestHasInserted("_hasInserted" as Boolean)
		{
			PUBVAR_WestHasInserted = _hasInserted;
			publicVariable "PUBVAR_WestHasInserted";
		};
		
		// Gets whether west has inserted into the mission at lwest once, so it actually has a value.
		public static method Boolean HasValueWestHasInserted() {
			return !isNil "PUBVAR_WestHasInserted";
		};
		
		// Gets whether west has inserted from the public network synchronized variable.
		// Returns: true if west has inserted, otherwise false.
		public static method Boolean GetWestHasInserted()
		{
			if (call _self.HasValueWestHasInserted) then {
				return PUBVAR_WestHasInserted;
			};

			return false;
		};
		
		
		// Sets and broadcasts whether east has inserted across the network.
		// _hasInserted (Boolean): Whether east has inserted into the mission or not.
		public static method BroadcastEastHasInserted("_hasInserted" as Boolean)
		{
			PUBVAR_EastHasInserted = _hasInserted;
			publicVariable "PUBVAR_EastHasInserted";
		};
		
		// Gets whether east has inserted into the mission at least once, so it actually has a value.
		public static method Boolean HasValueEastHasInserted() {
			return !isNil "PUBVAR_EastHasInserted";
		};
		
		// Gets whether east has inserted from the public network synchronized variable.
		// Returns: true if east has inserted, otherwise false.
		public static method Boolean GetEastHasInserted()
		{
			if (call _self.HasValueEastHasInserted) then {
				return PUBVAR_EastHasInserted;
			};

			return false;
		};
		
		
		public static method BroadcastInsertedWestlyUnits("_insertedWestlyUnits" as Array)
		{
			PUBVAR_InsertedWestlyUnits = _insertedWestlyUnits;
			publicVariable "PUBVAR_InsertedWestlyUnits";
		};
		
		public static method Boolean HasValueInsertedWestlyUnits() {
			return !isNil "PUBVAR_InsertedWestlyUnits";
		};
		
		public static method Array GetInsertedWestlyUnits()
		{
			if (call _self.HasValueInsertedWestlyUnits) then {
				return PUBVAR_InsertedWestlyUnits;
			};

			return [];
		};
		
		
		public static method BroadcastInsertedEastlyUnits("_insertedEastlyUnits" as Array)
		{
			PUBVAR_InsertedEastlyUnits = _insertedEastlyUnits;
			publicVariable "PUBVAR_InsertedEastlyUnits";
		};
		
		public static method Boolean HasValueInsertedEastlyUnits() {
			return !isNil "PUBVAR_InsertedEastlyUnits";
		};
		
		public static method Array GetInsertedEastlyUnits()
		{
			if (call _self.HasValueInsertedEastlyUnits) then {
				return PUBVAR_InsertedEastlyUnits;
			};

			return [];
		};
		
		
		#endregion
	};
};
