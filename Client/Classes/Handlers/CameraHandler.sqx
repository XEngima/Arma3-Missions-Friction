/*
 * Name:	CameraHandler
 * Date:	2020-07-08
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * Handles all about camera views - for dead players.
 */

using Mission.Communication;
using Mission.Client.Statics;

namespace Mission.Client
{
	public class CameraHandler
	{
		private fields ["_mCameraUnit" as Object];
	
		// Creates a CameraHandler object.
		public constructor()
		{
			_mCameraUnit = objNull;
		};
		
		public method SetDeathCamera()
		{
			private _hasInserted = false;
			private _missionUnits = (call PublicVariableHandler.GetInsertedWestlyUnits) + (call PublicVariableHandler.GetInsertedEastlyUnits);
		
			if (playerSide == west) then {
				_hasInserted = call PublicVariableHandler.GetWestHasInserted;
			}
			else {
				_hasInserted = call PublicVariableHandler.GetEastHasInserted;
			};
		
			if (_hasInserted && ClientState.IsAlive) then
			{
				// If the unit we are currently following has logged out or is dead, then switch camera
				if (!(alive _mCameraUnit)) then
				{
					// First, switch to someone in the same group
					{
						if (alive _x && (side group _x == playerSide)) then {
							switchCamera _x;
							_mCameraUnit = _x;
							return;
						};
					} foreach _missionUnits;
					
					// Second, switch to someone in the other team
					{
						if (alive _x) then {
							switchCamera _x;
							_mCameraUnit = _x;
							return;
						};
					} foreach _missionUnits;
				};
			};

			call _self.ResetPlayerCamera;
		};
		
		public method ResetPlayerCamera()
		{
			switchCamera player;
			_mCameraUnit = objNull;
		};
	};
};
