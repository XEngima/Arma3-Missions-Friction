/*
 * Name:	MissionBriefingService
 * Date:	2020-08-05
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * Plays the briefing service for the player.
 */

using Sqx.Services;
using Mission.Common;

namespace Mission.Client
{
	public class MissionBriefingService : Service
	{
		private fields ["_mMissionBriefing" as MissionBriefing, "_mBriefingHandler" as IBriefingHandler, "_mTaskHandler" as TaskHandler];
	
		// Creates a MissionBriefingService object.
		public constructor("_missionBriefing" as MissionBriefing, "_briefingHandler" as IBriefingHandler, "_taskHandler" as TaskHandler)
		{
			call _base.Constructor;
			_mMissionBriefing = _missionBriefing;
			_mBriefingHandler = _briefingHandler;
			_mTaskHandler = _taskHandler;
		};
		
		protected override method Run()
		{
			private ["_briefingInfo" as String, "_primaryObjective" as MissionObjective, "_secondaryObjective" as MissionObjective, "_returnObjective" as MissionObjective];
			
			sleep 1;
            [_mMissionBriefing.MissionName, str (date select 2) + "/" + str (date select 1) + "/" + str (date select 0) + " " + str (date select 3) + ":00"] spawn BIS_fnc_infoText;
			sleep 3;
			cutText ["", "BLACK IN", 1];
			sleep 3;
		
			_briefingInfo = [playerSide] call _mMissionBriefing.GetBriefingInfo;
			_primaryObjective = [playerSide, ObjectivePrio.Primary] call _mMissionBriefing.GetObjective;
			_secondaryObjective = [playerSide, ObjectivePrio.Secondary] call _mMissionBriefing.GetObjective;
			_returnObjective = [playerSide, ObjectivePrio.Return] call _mMissionBriefing.GetObjective;
			
			if (_briefingInfo != "") then {
				[_mMissionBriefing.MissionName, _briefingInfo] call _mBriefingHandler.CreateBriefing;
			};
			
			if (!isNull _primaryObjective) then {
				[_primaryObjective, ObjectivePrio.Primary] call _mTaskHandler.CreateTask;
			};
			
			if (!isNull _secondaryObjective) then {
				[_secondaryObjective, ObjectivePrio.Secondary] call _mTaskHandler.CreateTask;
			};
			
			if (!isNull _returnObjective) then {
				[_returnObjective, ObjectivePrio.Return] call _mTaskHandler.CreateTask;
			};
			
			call _base.Run;
		};
	};
};
