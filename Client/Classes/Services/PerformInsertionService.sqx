/*
 * Name:	PerformInsertionService
 * Date:	2020-06-30
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * Service that handles a group's insertion before executing a mission.
 */

using Sqx.Services;
using Tvtcf.Communication;
using Tvtcf.Common.Statics;
using Tvtcf.Common;

namespace Tvtcf.Client
{
	public class PerformInsertionService : Service
	{
		private fields ["_mWaitingForMapClick" as Boolean, "_mMapPos" as Array, "_mInsertionMarkers" as Array, "_mMessageHandler" as ClientMessageHandler, "_mMapMarkerHandler" as MapMarkerHandler];
	
		// Creates a PerformInsertionService object.
		public constructor("_messageHandler" as ClientMessageHandler, "_mapMarkerHandler" as MapMarkerHandler)
		{
			call _base.Constructor;
			_mMessageHandler = _messageHandler;
			_mMapMarkerHandler = _mapMarkerHandler;
		};
		
		public method Reset("_insertionMarkers" as Array /* of String */)
		{
			_mWaitingForMapClick = true;
			_mMapPos = [];
			_mInsertionMarkers = _insertionMarkers;
		};
		
		public method SendMapClick("_position" as Array)
		{
			_mMapPos = _position;
			_mWaitingForMapClick = false;
		};
		
		private method Boolean InAnyMarker("_position" as Array, "_markers" as Array)
		{
			if (count _markers == 0) then {
				return true;
			};
		
			{
				if (_position inArea _x) then {
					return true;
				};
			} foreach _markers as String;
			
			return false;
		};
		
		protected override method Run()
		{
			var _briefingEndTime = call PublicVariableHandler.GetBriefingEndTime;
			var _serverTime = call Functions.GetMissionTime;
			
			if (_serverTime < _briefingEndTime + CommonObjects.MissionParametersHandler.MandatoryPrepareTime) then {
				["Insertion is not yet allowed."] call _mMessageHandler.ShowMessage;
			}
			else
			{
				// Open the map and ask player to select a position
				
				var _interpolatedInsertionPos = getMarkerPos _mMapMarkerHandler.InsertionMarker;
				
				openMap true;
				mapAnimAdd [1, 0.2, _interpolatedInsertionPos];
				mapAnimCommit;
				//waitUntil { mapAnimDone };

				// Wait for map click
				
				_mWaitingForMapClick = true;
				
				["Select an insertion position inside one of the insertion markers."] call _mMessageHandler.ShowSubTitle;
				
				waitUntil {	!_mWaitingForMapClick || !visibleMap };
				
				if (!_mWaitingForMapClick) then
				{
					if ([_mMapPos, _mInsertionMarkers] call _self.InAnyMarker) then {
						["ServerEventReciever.OnPlayerPerformingInsertion", [playerSide, _mMapPos]] call Remote.Invoke;
					}
					else {
						["Insertion must be in the insertion markers. Please try again."] call _mMessageHandler.ShowSubTitle;
					};
				};
			};
			
			call _base.Run;
		};
	};
};
