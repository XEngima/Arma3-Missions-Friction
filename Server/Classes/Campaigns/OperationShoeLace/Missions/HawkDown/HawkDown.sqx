/*
 * Name:	EasyKill
 * Date:	2020-07-01
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * A very simple test mission.
 */

using Mission.Common;
using Sqx.Markers;
using Mission.Server;

namespace Mission.Server.OperationShoeLace
{
	public class HawkDown : ShoeLaceMission
	{
		private fields ["_mGreyHawk" as Object, "_mGreyHawkMarker" as String, "_mIntelCollected" as Boolean, "_mStealIntelActionId" as Scalar];
		
		// Creates a AirBaseMadness object.
		public constructor()
		{
			call _base.Constructor;
			
			_mGreyHawkMarker = "";
			_mIntelCollected = false;
		};
		
		protected override method InitMission("_mission" as Mission.Server.MissionSettings)
		{
			_mission.Name = "Hawk Down";
			_mission.StartMarkersActing = ["m05a_StartArea"];
			_mission.StartMarkersOpposing = ["m05o_StartArea"];
			_mission.SideMarkersActing = ["m05_CrashSite"];
			_mission.SideMarkersOpposing = ["m05_CrashSite"];
			_mission.AddReturnObjectiveForActing = true;
			_mission.AddReturnObjectiveForOpposing = true;
		};
		
		protected override method Setup()
		{
			// Spawn acting side's objects
			private _ammoBox = ["AMMOBOX ORDNANCE", MissionSide.Acting, BaseMarker.AmmoCrate] call _self.CreateSideVehicleOnBaseMarker;
			
			_ammoBox addBackpackCargoGlobal ["B_Kitbag_cbr", 1];

			_mGreyHawkMarker = selectRandom ["m05_HawkLocation1", "m05_HawkLocation2", "m05_HawkLocation3", "m05_HawkLocation4", "m05_HawkLocation5", "m05_HawkLocation6", "m05_HawkLocation7", "m05_HawkLocation8", "m05_HawkLocation9", "m05_HawkLocation10", "m05_HawkLocation11", "m05_HawkLocation12", "m05_HawkLocation13", "m05_HawkLocation14", "m05_HawkLocation15"];
			
			_mGreyHawk = ["TRANSPORT HELICOPTER", MissionSide.Acting, _mGreyHawkMarker] call _self.CreateSideVehicleOnMarker;
			_mGreyHawk setDamage [0.8, false];
			
			_mStealIntelActionId = [_mGreyHawk, "Steal intel", MissionSide.Opposing] call _self.AddAction;

			call _base.Setup;
		};
		
		public override method OnAction("_actionId" as Scalar, "_target" as Object, "_actor" as Object)
		{
			if (_actionId == _mStealIntelActionId) then {
				_mIntelCollected = true;
				_self.GainedTokenOpposing = "HAWKINTEL";
			};
		};
		
		protected override method MissionObjective CreatePrimaryObjectiveForActing()
		{
			private _shortDescription = "Destroy helicopter";
			private _longDescription = "Find and destroy the helicopter before it falls into enemy hands. Do not forget to bring explosives, which can be found in the explosives box in the base.";
			
			return [_shortDescription, _longDescription] new MissionObjective;
		};
		
		protected override method MissionObjective CreatePrimaryObjectiveForOpposing()
		{
			private _shortDescription = "Steal intel from wreckage";
			private _longDescription = "Find the downed enemy helicopter before the enemy finds it and steal some intel.";
			
			return [_shortDescription, _longDescription] new MissionObjective;
		};
		
		protected override method ObjectiveState CheckPrimaryObjectiveStateActing()
		{
			if (_mIntelCollected) then {
				return ObjectiveState.Failed;
			};
			
			if (!alive _mGreyHawk) then {
				return ObjectiveState.Succeeded;
			};
			
			return ObjectiveState.None;
		};
		
		protected override method ObjectiveState CheckPrimaryObjectiveStateOpposing()
		{
			private _greyHawkAlive = alive _mGreyHawk;
			
			if (!_greyHawkAlive) then {
				return ObjectiveState.Failed;
			};
			
			if (_mIntelCollected) then {
				return ObjectiveState.Succeeded;
			};
			
			return ObjectiveState.None;
		};
	};
};
